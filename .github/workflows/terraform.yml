name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      resource_group_name:
        type: string
        description: The name of the Azure Resource Group to be created.
        default: sre-challenge-flaschenpost
      resource_group_tag_key:
        type: string
        description: "A key-value pair tag for the resource group. The default is department: SRE."
        default: department       
      resource_group_tag_value:
        type: string
        description: "A key-value pair tag for the resource group. The default is department: SRE."
        default: SRE 
      storage_account_name:
        type: string
        description:  The name of the Azure Storage Account to be created.
        default: srechallengeforfp
      storage_account_resource_group:
        type: string
        description: The resource group to associate the storage account with. Defaults to sre-challenge-flaschenpost.
        default: sre-challenge-flaschenpost
      sku:
        type: choice
        description: The SKU of the storage account. The default is Standard_LRS. Other options may include Premium_LRS or Standard_GRS.
        default: Standard_LRS
        options:
        - Premium_LRS
        - Standard_GRS
      access_tier:
        type: choice
        description:  The access tier for the storage account. The default is Hot. Other options include Cool. 
        default: Hot
        options:
        - Hot
        - Cool
      storage_account_tag_key:
        type: string
        description: "A key-value pair tag for the resource group. The default is department: SRE."
        default: department       
      storage_account_tag_value:
        type: string
        description: "A key-value pair tag for the resource group. The default is department: SRE."
        default: SRE 
      container_name:
        type: string
        default: sre
      # commented out as there is a hard limit of 10 inputs
      # container_type:
      #   type: string
      #   default: private
      #   options:
      #   - private
      #   - blob

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./q1
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform validate
      working-directory: ./q1
      run: terraform validate

    # Run terraform apply - this step is so far only theoretical, as no AZ subscription is configured
    # - name: Terrafom plan
    #   working-directory: ./q1
    #   run: terraform plan \
    #     -var resourceGroupName=${{inputs.resource_group_name}}
    #     -var resourceGroupTagKey=${{inputs.resource_group_tag_key}}
    #     -var resourceGroupTagValue=${{inputs.resource_group_tag_value}}
    #     -var storageAccountName=${{inputs.storage_account_name}}
    #     -var storageAccountResourceGroup=${{inputs.storage_account_resource_group}}
    #     -var storageAccountSKU=${{inputs.sku}}
    #     -var storageAccountAccessTier=${{inputs.access_tier}}
    #     -var storageAccountTagKey=${{inputs.storage_account_tag_key}}
    #     -var storageAccountTagValue=${{inputs.storage_account_tag_value}}
    #     -var storageAccountCointainerName=${{inputs.container_name}}
    #     -var storageAccountCointainerType=${{inputs.container_type}}

    # validate input variables
    - name: validate variables
      run: echo ${{inputs.resource_group_name}} \
        echo ${{inputs.resource_group_tag_key}} \
        echo ${{inputs.resource_group_tag_value}} \
        echo ${{inputs.storage_account_name}} \
        echo ${{inputs.storage_account_resource_group}} \
        echo ${{inputs.sku}} \
        echo ${{inputs.access_tier}} \
        echo ${{inputs.storage_account_tag_key}} \
        echo ${{inputs.storage_account_tag_value}} \
        echo ${{inputs.container_name}} \        
    
